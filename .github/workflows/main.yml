# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: "Build & Test the app"
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: gradle:6-jdk11 # The app in this repo is super old, so we need gradle 6

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Build the app
      - run: ci/build-app.sh
        name: Build the app

      # Test the app
      - run: ci/unit-test-app.sh
        name: Test the app

      # Upload code again (for demonstration purposes, it dosn't really make sense) 
      - uses: actions/upload-artifact@v4
        with: 
          name: code
          path: .
    
  linting:
    name: "Run super linter"
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/download-artifact@v4
        name: "Download code"
        with:
          name: code
          path: .
      - name: Run linting
        uses: super-linter/super-linter/slim@v5 
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DISABLE_ERRORS: true

  docker-image:
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      packages: write
    steps:
      - name: Download code
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .

      - name: Login with docker
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: "alexandernorup"
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push docker image
        uses: docker/build-push-action@v5
        with:
          context: app
          push: true
          tags: ghcr.io/alexandernorup/micronaut-app:1.0-${{ github.sha }},ghcr.io/alexandernorup/micronaut-app:latest
  

